// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxCalculator.Models;

namespace TaxCalculator.Migrations
{
    [DbContext(typeof(TaxCalculatorContext))]
    partial class TaxCalculatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaxCalculator.Models.Item", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalWithVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.Property<decimal>("VATPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = "dummyItemType1",
                            ItemTypeId = 1,
                            OrderId = "dummyOrder1",
                            PricePerUnit = 2.5m,
                            Subtotal = 15.0m,
                            TotalWithVat = 18.750m,
                            Units = 6,
                            VATPercentage = 25m
                        },
                        new
                        {
                            Id = "dummyItemType2",
                            ItemTypeId = 2,
                            OrderId = "dummyOrder2",
                            PricePerUnit = 5m,
                            Subtotal = 60m,
                            TotalWithVat = 60m,
                            Units = 12,
                            VATPercentage = 0m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("VATPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ItemType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            VATPercentage = 25m
                        },
                        new
                        {
                            Id = 2,
                            VATPercentage = 0m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = "dummyOrder1",
                            Total = 78.75m
                        },
                        new
                        {
                            Id = "dummyOrder2",
                            Total = 0m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Models.Item", b =>
                {
                    b.HasOne("TaxCalculator.Models.ItemType", "Type")
                        .WithMany()
                        .HasForeignKey("ItemTypeId");

                    b.HasOne("TaxCalculator.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("TaxCalculator.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
